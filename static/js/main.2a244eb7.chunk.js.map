{"version":3,"sources":["components/Game/gamecomponents/workerCard/workerCard.js","components/Game/game.js","components/Home/home.js","components/Leaderboard/leaderboard.js","components/Navbar/navbar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","card","maxWidth","media","margin","width","height","objectFit","props","classes","react_default","a","createElement","Card_default","className","CardActionArea_default","CardMedia_default","component","alt","name","image","title","CardContent_default","Typography_default","gutterBottom","variant","Game","state","worker","clicked","componentDidMount","_this","setState","shuffle","Workers","handleClick","indexOf","alert","clickedArr","push","_this2","this","Fragment","Grid_default","container","spacing","map","item","xs","onClick","workerCard","Component","Home","expanded","handleChange","panel","event","picture","src","root","ExpansionPanel_default","onChange","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","secondaryHeading","ExpansionPanelDetails_default","theme","fontSize","typography","pxToRem","flexBasis","flexShrink","color","palette","text","secondary","Leaderboard","Navbar","open","toggleDrawer","changeOpen","sideList","list","List_default","Link","to","style","textDecoration","ListItem_default","button","ListItemText_default","primary","Divider_default","AppBar_default","position","backgroundColor","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","grow","Button_default","Drawer_default","onClose","tabIndex","role","onKeyDown","flexGrow","marginLeft","marginRight","fullList","App","BrowserRouter","navbar","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a244eb7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    margin: 'auto', \r\n    width: '150px',\r\n    height: '150px',\r\n    objectFit: 'fixed'\r\n  },\r\n};\r\n\r\nconst WorkerCard = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={props.name}\r\n          className={classes.media}\r\n          height=\"140\"\r\n          image={props.image}\r\n          title={props.name}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.name}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nWorkerCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WorkerCard);","import React, {Component} from 'react'\r\nimport Workers from '../../office.json'\r\nimport WorkerCard from './gamecomponents/workerCard'\r\nimport shuffle from 'shuffle-array'\r\nimport Grid from '@material-ui/core/Grid';\r\nclass Game extends Component {\r\n    state={\r\n        worker: [],\r\n        clicked: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({worker: shuffle(Workers)})\r\n    }\r\n    handleClick = name => {\r\n        if (this.state.clicked.indexOf(name) !== -1){\r\n            alert('You Lose!')\r\n        } else {\r\n            let clickedArr = this.state.clicked\r\n            clickedArr.push(name)\r\n            this.setState({worker: shuffle(Workers), clicked: clickedArr})}\r\n    }\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Hello I am gayme</h1>\r\n            <Grid container spacing={24}>\r\n            {\r\n                this.state.worker.map(worker => \r\n                    <Grid item xs={3} onClick={()=>this.handleClick(worker.name)}>\r\n                        <WorkerCard name = {worker.name} image={worker.image} />\r\n                    </Grid>\r\n                )\r\n            }\r\n            </Grid>\r\n            </>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Game","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  picture: {\r\n      width: '100%',\r\n      height: '75vh',\r\n      objectFit: 'cover'\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    expanded: null,\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n\r\n    return (\r\n    <>\r\n      <Grid container spacing ={0}>\r\n        <Grid item xs ={12}>\r\n            <img \r\n            className= {classes.picture}\r\n            src=\"https://cdn-images-1.medium.com/max/2000/0*gjSQ2VvQoKpumy_p.jpg\" alt=\"The Office Background\"/>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.root}>\r\n        <ExpansionPanel expanded={expanded === 'panel1'} onChange={this.handleChange('panel1')}>\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>What Is This?</Typography>\r\n            <Typography className={classes.secondaryHeading}>Description of the Game</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <Typography>\r\n              This is a Pokedex Clicky Game where you can compete against other players for the longest run of correct pokemon choices.\r\n            </Typography>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        <ExpansionPanel expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')}>\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>How Do I Play?</Typography>\r\n            <Typography className={classes.secondaryHeading}>\r\n              Instructions on how to play the pokemon clicky game\r\n            </Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <Typography>\r\n              Donec placerat, lectus sed mattis semper, neque lectus feugiat lectus, varius pulvinar\r\n              diam eros in elit. Pellentesque convallis laoreet laoreet.\r\n            </Typography>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        <ExpansionPanel expanded={expanded === 'panel3'} onChange={this.handleChange('panel3')}>\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>Advanced settings</Typography>\r\n            <Typography className={classes.secondaryHeading}>\r\n              Filtering has been entirely disabled for whole web server\r\n            </Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <Typography>\r\n              Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas\r\n              eros, vitae egestas augue. Duis vel est augue.\r\n            </Typography>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        <ExpansionPanel expanded={expanded === 'panel4'} onChange={this.handleChange('panel4')}>\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>Personal data</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <Typography>\r\n              Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas\r\n              eros, vitae egestas augue. Duis vel est augue.\r\n            </Typography>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </div>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React from 'react'\r\n\r\nconst Leaderboard = () => \r\n    <h1>hello my name is jin</h1>\r\n\r\n\r\nexport default Leaderboard","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Link} from 'react-router-dom'\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n};\r\n\r\nclass Navbar extends Component  {\r\n\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    toggleDrawer = (changeOpen)  => {\r\n    this.setState({open: changeOpen});\r\n    // console.log('true')\r\n};\r\n\r\nrender(){\r\n  const { classes } = this.props;\r\n\r\n  const sideList = (\r\n    <div className={classes.list}>\r\n      <List>\r\n         <Link to='/' style={{color: 'black', textDecoration: 'none'}}>\r\n          <ListItem button>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n         </Link> \r\n         <Link to='/Game' style={{color: 'black', textDecoration: 'none'}}>\r\n          <ListItem button>\r\n            <ListItemText primary='Game' />\r\n          </ListItem>\r\n         </Link> \r\n         <Link to='/Leaderboard' style={{color: 'black', textDecoration: 'none'}}>\r\n          <ListItem button>\r\n            <ListItemText primary='Leaderboard' />\r\n          </ListItem>\r\n         </Link> \r\n      </List>\r\n      <Divider />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor: 'orange'}}>\r\n        <Toolbar>\r\n          <IconButton onClick={() => this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            News\r\n          </Typography>\r\n          <Link to='/' style={{color:'white', textDecoration: 'none'}}>\r\n              <Button color='inherit'> Home </Button>  \r\n          </Link>\r\n          <Link to='/Game' style={{color:'white', textDecoration: 'none'}}>\r\n              <Button color='inherit'> Game </Button>\r\n          </Link>\r\n          <Link to='/Leaderboard' style={{color:'white', textDecoration: 'none'}}>\r\n              <Button color='inherit'> Leaderboard </Button>\r\n          </Link>\r\n\r\n\r\n          <Drawer open={this.state.open} onClose={()=>this.toggleDrawer(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={()=>this.toggleDrawer(false)}\r\n            onKeyDown={()=>this.toggleDrawer(false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Game from './components/Game'\nimport Home from './components/Home'\nimport Leaderboard from './components/Leaderboard'\nimport Navbar from './components/Navbar'\n\nclass App extends Component {\n \n\n  render() {\n    return (\n      <>\n      <Router> \n        <div>\n          <Navbar/>\n          <Route exact path='/' component = {Home}/>\n          <Route path='/Game' component= {Game}/>\n          <Route path='/Leaderboard' component={Leaderboard} />\n        </div>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}